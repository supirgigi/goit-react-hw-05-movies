{"version":3,"file":"static/js/129.992e0914.chunk.js","mappings":"2RACA,EAA0B,+BAA1B,EAAiE,6BAAjE,EAAoG,2BAApG,EAAsI,4BAAtI,EAA6K,gC,SCgD7K,EA1CqB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACdC,EAAuDD,EAAvDC,OAAQC,EAA+CF,EAA/CE,aAAcC,EAAiCH,EAAjCG,YAAaC,EAAoBJ,EAApBI,MAAOC,EAAaL,EAAbK,SAE5CC,EAASH,EAAW,UAAMI,EAAAA,GAAN,YAAkBJ,GAAgBK,EACtDC,EAAS,WAAsB,GAAfP,GAAmBQ,QAAQ,GAAlC,KACTC,EAAgBN,GAElB,uCACEO,EACJX,EAAOY,OAAS,EACZZ,EAAOa,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MACrC,iDAEN,OACE,iBAAKC,UAAWC,EAAhB,WACE,gBAAKC,IAAKd,EAAQe,IAAKjB,EAAOc,UAAWC,KACzC,iBAAKD,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAA8Bf,KAC9B,wCAAgBK,MAChB,cAAGS,UAAWC,EAAd,uBACA,uBAAIR,KACJ,cAAGO,UAAWC,EAAd,qBACA,uBAAIP,SAIX,E,UChCD,EAAuB,8BC+BvB,EA3BuB,SAAC,GAAkB,IAAhBU,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KAC5B,OACE,4BACE,eAAIL,UAAU,QAAd,qCACA,gBAAIA,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CAAMK,MAAO,CAAED,KAAAA,GAAQE,GAAE,kBAAaH,EAAb,SAAzB,qBAIF,yBACE,SAAC,KAAD,CAAME,MAAO,CAAED,KAAAA,GAAQE,GAAE,kBAAaH,EAAb,YAAzB,4BAOT,ECkCD,EA/CyB,WAAO,IAAD,EAC7B,GAA0BI,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAO1B,EAAP,KAAc2B,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAEXZ,GAAO,WADIa,EAAAA,EAAAA,MACKZ,aAAT,eAAgBD,OAAQ,IAqBrC,OAlBAc,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,2FACxBT,GAAW,GACXE,EAAS,MAFe,mBAKDQ,EAAAA,EAAAA,IAAgBP,GALf,OAKhBQ,EALgB,OAMtBb,EAASa,GANa,gDAQtBT,EAAS,EAAD,IARc,yBAUtBF,GAAW,GAVW,4EAAH,qDAcvBS,GACD,GAAE,CAACN,KAGF,iCACE,mBAAQS,KAAK,SAASC,QAtBX,kBAAMR,EAASX,EAAf,EAsB4BL,UAAU,MAAjD,qBAGCU,IAAW,SAACe,EAAA,EAAD,IACXb,IAAS,SAACc,EAAA,EAAD,CAAUd,MAAOA,EAAMe,UAChC7C,EAAMI,QACL,iCACE,SAAC,EAAD,CAAcJ,MAAOA,KACrB,SAAC,EAAD,CAAgBuB,KAAMA,EAAMD,GAAIU,KAChC,SAAC,KAAD,SAKT,C,2NCrDYzB,EAAW,kCAElBuC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,KAAM,KAIGC,EAAW,mCAAG,sGACFN,EAASO,IAAI,uBADX,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAASO,IAAI,gBAAiB,CACnDJ,OAAQ,CACNO,MAAAA,KAHsB,uBAClBF,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZf,EAAe,mCAAG,WAAMjB,GAAN,yFACNwB,EAASO,IAAT,iBAAuB/B,IADjB,uBACrBgC,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAY,mCAAG,WAAMnC,GAAN,yFACHwB,EAASO,IAAT,iBAAuB/B,EAAvB,aADG,uBAClBgC,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZI,EAAe,mCAAG,WAAMpC,GAAN,yFACNwB,EAASO,IAAT,iBAAuB/B,EAAvB,aADM,uBACrBgC,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD,uDCnC5B,MAAuB,wB,SCWvB,EARiB,SAAC,GAAe,IAAbxB,EAAY,EAAZA,MAClB,OAAO,cAAGZ,UAAWC,EAAd,SAA4BW,GACpC,C","sources":["webpack://react-homework-template/./src/modules/MovieDetails/movie-details.module.css?3153","modules/MovieDetails/MovieDetails.jsx","webpack://react-homework-template/./src/modules/AdditionalInfo/additional-info.module.css?877c","modules/AdditionalInfo/AdditionalInfo.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","shared/api/movies.js","webpack://react-homework-template/./src/shared/components/ErrorMsg/error-msg.module.css?03c9","shared/components/ErrorMsg/ErrorMsg.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"movie-details_wrapper__u-yqZ\",\"title\":\"movie-details_title__AAaPB\",\"img\":\"movie-details_img__smbMl\",\"info\":\"movie-details_info__KPce9\",\"subtitle\":\"movie-details_subtitle__LEQqO\"};","import PropTypes from 'prop-types';\n\nimport { imageUrl } from 'shared/api/movies';\nimport placeholderImg from 'shared/placeholder/placeholder.jpg';\n\nimport styles from './movie-details.module.css';\n\nconst MovieDetails = ({ movie }) => {\n  const { genres, vote_average, poster_path, title, overview } = movie;\n\n  const imgSrc = poster_path ? `${imageUrl}/${poster_path}` : placeholderImg;\n  const userScore = `${(vote_average * 10).toFixed(0)}%`;\n  const movieOverview = overview\n    ? overview\n    : 'No overview available for this movie';\n  const movieGenres =\n    genres.length > 0\n      ? genres.map(genre => genre.name).join(', ')\n      : 'No genres information available for this movie';\n\n  return (\n    <div className={styles.wrapper}>\n      <img src={imgSrc} alt={title} className={styles.img} />\n      <div className={styles.info}>\n        <h3 className={styles.title}>{title}</h3>\n        <p>User Score: {userScore}</p>\n        <p className={styles.subtitle}>Overview</p>\n        <p>{movieOverview}</p>\n        <p className={styles.subtitle}>Genres</p>\n        <p>{movieGenres}</p>\n      </div>\n    </div>\n  );\n};\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n    vote_average: PropTypes.number,\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    overview: PropTypes.string,\n  }),\n};\n\nexport default MovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"additional-info_list__3+hmZ\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './additional-info.module.css';\n\nconst AdditionalInfo = ({ id, from }) => {\n  return (\n    <div>\n      <h3 className=\"title\">Additional information</h3>\n      <ul className={styles.list}>\n        <li>\n          <Link state={{ from }} to={`/movies/${id}/cast`}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link state={{ from }} to={`/movies/${id}/reviews`}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nAdditionalInfo.propTypes = {\n  id: PropTypes.string.isRequired,\n  from: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }),\n};\n\nexport default AdditionalInfo;\n","import { useState, useEffect } from 'react';\nimport { useParams, useNavigate, Outlet, useLocation } from 'react-router-dom';\n\nimport Loader from 'shared/components/Loader';\nimport ErrorMsg from 'shared/components/ErrorMsg';\nimport { getMovieDetails } from 'shared/api/movies';\n\nimport MovieDetails from 'modules/MovieDetails';\nimport AdditionalInfo from 'modules/AdditionalInfo';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n  const goBack = () => navigate(from);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        const result = await getMovieDetails(movieId);\n        setMovie(result);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <>\n      <button type=\"button\" onClick={goBack} className=\"btn\">\n        Go back\n      </button>\n      {loading && <Loader />}\n      {error && <ErrorMsg error={error.message} />}\n      {movie.title && (\n        <>\n          <MovieDetails movie={movie} />\n          <AdditionalInfo from={from} id={movieId} />\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nexport const imageUrl = 'https://image.tmdb.org/t/p/w300';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd69968ee858c93c3dbc043339ed72979',\n    page: 1,\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"error-msg_text__XCU1C\"};","import PropTypes from 'prop-types';\n\nimport styles from './error-msg.module.css';\n\nconst ErrorMsg = ({ error }) => {\n  return <p className={styles.text}>{error}</p>;\n};\n\nErrorMsg.propTypes = {\n  error: PropTypes.string.isRequired,\n};\n\nexport default ErrorMsg;\n"],"names":["movie","genres","vote_average","poster_path","title","overview","imgSrc","imageUrl","placeholderImg","userScore","toFixed","movieOverview","movieGenres","length","map","genre","name","join","className","styles","src","alt","id","from","state","to","useState","setMovie","loading","setLoading","error","setError","movieId","useParams","navigate","useNavigate","useLocation","useEffect","fetchMovieDetails","getMovieDetails","result","type","onClick","Loader","ErrorMsg","message","instance","axios","baseURL","params","api_key","page","getTrending","get","data","searchMovies","query","getMovieCast","getMovieReviews"],"sourceRoot":""}