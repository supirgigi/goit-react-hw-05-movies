{"version":3,"file":"static/js/680.a2623031.chunk.js","mappings":"mPAwCA,UAjCiB,WACf,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,6FAClBJ,GAAW,GACXE,EAAS,MAFS,mBAKUG,EAAAA,EAAAA,MALV,gBAKRC,EALQ,EAKRA,QACRR,EAAUQ,GANM,kDAQhBJ,EAAS,EAAD,IARQ,yBAUhBF,GAAW,GAVK,6EAAH,qDAcjBI,GACD,GAAE,KAGD,iCACE,eAAIG,UAAU,QAAd,4BACCR,IAAW,SAAC,IAAD,IACXE,IAAS,SAAC,IAAD,CAAUA,MAAOA,EAAMO,UAChCX,EAAOY,OAAS,IAAK,SAAC,IAAD,CAAWZ,OAAQA,MAG9C,C,2NCpCYa,EAAW,kCAElBC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,KAAM,KAIGX,EAAW,mCAAG,sGACFM,EAASM,IAAI,uBADX,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,yFACHT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNM,MAAAA,KAHsB,uBAClBF,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZG,EAAe,mCAAG,WAAMC,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,IADjB,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfK,EAAY,mCAAG,WAAMD,GAAN,yFACHX,EAASM,IAAT,iBAAuBK,EAAvB,aADG,uBAClBJ,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZM,EAAe,mCAAG,WAAMF,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD,uDCnC5B,MAAuB,wB,SCWvB,EARiB,SAAC,GAAe,IAAbjB,EAAY,EAAZA,MAClB,OAAO,cAAGM,UAAWkB,EAAd,SAA4BxB,GACpC,C,+ECLD,EAAuB,yB,SCIjByB,EAAY,SAAC,GAAgB,IAAd7B,EAAa,EAAbA,OACb8B,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIrB,UAAWkB,EAAf,SACG5B,EAAOgC,KAAI,gBAAGC,EAAH,EAAGA,MAAOR,EAAV,EAAUA,GAAV,OACV,yBACE,SAAC,KAAD,CAAMS,MAAO,CAAEC,KAAML,GAAYM,GAAE,kBAAaX,GAAhD,SACGQ,KAFIR,EADC,KASjB,EAEDI,EAAUQ,aAAe,CACvBrC,OAAQ,IAYV,O","sources":["pages/HomePage/HomePage.jsx","shared/api/movies.js","webpack://react-homework-template/./src/shared/components/ErrorMsg/error-msg.module.css?03c9","shared/components/ErrorMsg/ErrorMsg.jsx","webpack://react-homework-template/./src/shared/components/MovieList/movie-list.module.css?a5a8","shared/components/MovieList/MovieList.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nimport MovieList from 'shared/components/MovieList';\nimport Loader from 'shared/components/Loader';\nimport ErrorMsg from 'shared/components/ErrorMsg';\nimport { getTrending } from 'shared/api/movies';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        const { results } = await getTrending();\n        setMovies(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <>\n      <h2 className=\"title\">Trending today</h2>\n      {loading && <Loader />}\n      {error && <ErrorMsg error={error.message} />}\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nexport const imageUrl = 'https://image.tmdb.org/t/p/w300';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd69968ee858c93c3dbc043339ed72979',\n    page: 1,\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"error-msg_text__XCU1C\"};","import PropTypes from 'prop-types';\n\nimport styles from './error-msg.module.css';\n\nconst ErrorMsg = ({ error }) => {\n  return <p className={styles.text}>{error}</p>;\n};\n\nErrorMsg.propTypes = {\n  error: PropTypes.string.isRequired,\n};\n\nexport default ErrorMsg;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"movie-list_list__IWYUr\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './movie-list.module.css';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={styles.list}>\n      {movies.map(({ title, id }) => (\n        <li key={id}>\n          <Link state={{ from: location }} to={`/movies/${id}`}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.defaultProps = {\n  movies: [],\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n"],"names":["useState","movies","setMovies","loading","setLoading","error","setError","useEffect","fetchMovies","getTrending","results","className","message","length","imageUrl","instance","axios","baseURL","params","api_key","page","get","data","searchMovies","query","getMovieDetails","id","getMovieCast","getMovieReviews","styles","MovieList","location","useLocation","map","title","state","from","to","defaultProps"],"sourceRoot":""}