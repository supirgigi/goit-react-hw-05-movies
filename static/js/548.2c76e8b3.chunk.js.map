{"version":3,"file":"static/js/548.2c76e8b3.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/modules/MovieList/movie-list.module.css?7d98","modules/MovieList/MovieList.jsx","webpack://react-homework-template/./src/modules/SearchForm/search-form.module.css?7881","modules/SearchForm/SearchForm.jsx","pages/MovieSearchPage/MovieSearchPage.jsx","shared/api/movies.js","webpack://react-homework-template/./src/shared/components/ErrorMsg/error-msg.module.css?03c9","shared/components/ErrorMsg/ErrorMsg.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"movie-list_list__h0XkG\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport styles from './movie-list.module.css';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={styles.list}>\n      {movies.map(({ title, id }) => (\n        <li key={title}>\n          <Link state={{ from: location }} to={`/movies/${id}`}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.defaultProps = {\n  movies: [],\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"search-form_form__jxJzD\",\"input\":\"search-form_input__61taf\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nimport styles from './search-form.module.css';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [state, setState] = useState({\n    query: '',\n  });\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { query } = state;\n\n    if (query.trim() === '') {\n      toast.error('Enter correct movie title');\n      setState({ query: '' });\n      return;\n    }\n\n    onSubmit(query);\n    setState({ query: '' });\n  };\n\n  const { query } = state;\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <input\n        name=\"query\"\n        type=\"text\"\n        value={query}\n        onChange={handleChange}\n        placeholder=\"search movies\"\n        required\n        className={styles.input}\n      />\n      <button type=\"submit\" className=\"btn\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport Loader from 'shared/components/Loader';\nimport ErrorMsg from 'shared/components/ErrorMsg';\nimport { searchMovies } from 'shared/api/movies';\n\nimport MovieList from 'modules/MovieList';\nimport SearchForm from 'modules/SearchForm';\n\nconst MovieSearchPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const fetchMovies = async () => {\n      setLoading(true);\n      setError(null);\n      setMovies([]);\n\n      try {\n        const { results, total_results } = await searchMovies(query);\n        if (total_results === 0) {\n          return toast.error(`No movies with title \"${query}\" found`);\n        }\n        setMovies(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [query]);\n\n  const changeQuery = query => {\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={changeQuery} />\n      {movies.length > 0 && <MovieList movies={movies} />}\n      {loading && <Loader />}\n      {error && <ErrorMsg error={error.message} />}\n    </>\n  );\n};\n\nexport default MovieSearchPage;\n","import axios from 'axios';\n\nexport const imageUrl = 'https://image.tmdb.org/t/p/w300';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd69968ee858c93c3dbc043339ed72979',\n    page: 1,\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  console.log(data);\n\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  console.log(data);\n\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  console.log(data);\n\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  console.log(data);\n\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  console.log(data);\n\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"error-msg_text__XCU1C\"};","import PropTypes from 'prop-types';\n\nimport styles from './error-msg.module.css';\n\nconst ErrorMsg = ({ error }) => {\n  return <p className={styles.text}>{error}</p>;\n};\n\nErrorMsg.propTypes = {\n  error: PropTypes.string.isRequired,\n};\n\nexport default ErrorMsg;\n"],"names":["MovieList","movies","location","useLocation","className","styles","map","title","id","state","from","to","defaultProps","onSubmit","useState","query","setState","e","preventDefault","trim","toast","name","type","value","onChange","target","placeholder","required","setMovies","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMovies","searchMovies","results","total_results","length","Loader","ErrorMsg","message","imageUrl","instance","axios","baseURL","params","api_key","page","getTrending","data","console","log","getMovieDetails","getMovieCast","getMovieReviews"],"sourceRoot":""}