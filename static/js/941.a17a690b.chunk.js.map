{"version":3,"file":"static/js/941.a17a690b.chunk.js","mappings":"iRACA,EAAuB,sBAAvB,EAAqD,uB,SCG/CA,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,OACE,eAAIC,UAAWC,EAAf,SACGF,EAAQG,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,2BACE,gBAAIL,UAAWC,EAAf,qBAAsCE,MACtC,uBAAIC,MAFGC,EADE,KAQlB,EAEDP,EAAQQ,aAAe,CACrBP,QAAS,IAaX,QCeA,EArCyB,WACvB,OAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAuBR,OArBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,6FACxBN,GAAW,GACXE,EAAS,MAFe,mBAKIK,EAAAA,EAAAA,IAAgBJ,GALpB,mBAMC,KADfK,EALc,EAKdA,SACIC,OANU,sBAOd,IAAIC,MAAM,uCAPI,OAStBZ,EAAWU,GATW,kDAWtBN,EAAS,EAAD,IAXc,yBAatBF,GAAW,GAbW,6EAAH,qDAiBvBM,GACD,GAAE,CAACH,KAGF,gCACGJ,IAAW,SAACY,EAAA,EAAD,IACXV,IAAS,SAACW,EAAA,EAAD,CAAUX,MAAOA,EAAMY,UAChCxB,EAAQoB,OAAS,IAAK,SAAC,EAAD,CAASpB,QAASA,MAG9C,C,2NC1CYyB,EAAW,kCAElBC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,mCACTC,KAAM,KAIGC,EAAW,mCAAG,sGACFN,EAASO,IAAI,uBADX,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAASO,IAAI,gBAAiB,CACnDJ,OAAQ,CACNO,MAAAA,KAHsB,uBAClBF,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZG,EAAe,mCAAG,WAAM/B,GAAN,yFACNoB,EAASO,IAAT,iBAAuB3B,IADjB,uBACrB4B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAY,mCAAG,WAAMhC,GAAN,yFACHoB,EAASO,IAAT,iBAAuB3B,EAAvB,aADG,uBAClB4B,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZhB,EAAe,mCAAG,WAAMZ,GAAN,yFACNoB,EAASO,IAAT,iBAAuB3B,EAAvB,aADM,uBACrB4B,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD,uDCnC5B,MAAuB,wB,SCWvB,EARiB,SAAC,GAAe,IAAbtB,EAAY,EAAZA,MAClB,OAAO,cAAGX,UAAWC,EAAd,SAA4BU,GACpC,C","sources":["webpack://react-homework-template/./src/modules/Reviews/reviews.module.css?b2ff","modules/Reviews/Reviews.jsx","pages/MovieReviewsPage/MovieReviewsPage.jsx","shared/api/movies.js","webpack://react-homework-template/./src/shared/components/ErrorMsg/error-msg.module.css?03c9","shared/components/ErrorMsg/ErrorMsg.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"reviews_list__oZBcb\",\"title\":\"reviews_title__QxhAn\"};","import PropTypes from 'prop-types';\n\nimport styles from './reviews.module.css';\n\nconst Reviews = ({ reviews }) => {\n  return (\n    <ul className={styles.list}>\n      {reviews.map(({ author, content, id }) => (\n        <li key={id}>\n          <h4 className={styles.title}>Author: {author}</h4>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nReviews.defaultProps = {\n  reviews: [],\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Reviews;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Loader from 'shared/components/Loader';\nimport ErrorMsg from 'shared/components/ErrorMsg';\nimport { getMovieReviews } from 'shared/api/movies';\n\nimport Reviews from 'modules/Reviews';\n\nconst MovieReviewsPage = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        const { results } = await getMovieReviews(movieId);\n        if (results.length === 0) {\n          throw new Error('No reviews available for this movie');\n        }\n        setReviews(results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <ErrorMsg error={error.message} />}\n      {reviews.length > 0 && <Reviews reviews={reviews} />}\n    </>\n  );\n};\n\nexport default MovieReviewsPage;\n","import axios from 'axios';\n\nexport const imageUrl = 'https://image.tmdb.org/t/p/w300';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd69968ee858c93c3dbc043339ed72979',\n    page: 1,\n  },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"error-msg_text__XCU1C\"};","import PropTypes from 'prop-types';\n\nimport styles from './error-msg.module.css';\n\nconst ErrorMsg = ({ error }) => {\n  return <p className={styles.text}>{error}</p>;\n};\n\nErrorMsg.propTypes = {\n  error: PropTypes.string.isRequired,\n};\n\nexport default ErrorMsg;\n"],"names":["Reviews","reviews","className","styles","map","author","content","id","defaultProps","useState","setReviews","loading","setLoading","error","setError","movieId","useParams","useEffect","fetchMovieReviews","getMovieReviews","results","length","Error","Loader","ErrorMsg","message","imageUrl","instance","axios","baseURL","params","api_key","page","getTrending","get","data","searchMovies","query","getMovieDetails","getMovieCast"],"sourceRoot":""}